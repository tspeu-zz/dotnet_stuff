// <auto-generated />
using System;
using CrmApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrmApi.Migrations
{
    [DbContext(typeof(CrmApiContext))]
    [Migration("20191107131426_refactorCustomer")]
    partial class refactorCustomer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CrmApi.Data.Domain.Customer", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 130, DateTimeKind.Local).AddTicks(7530));

                    b.Property<string>("DNI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<bool>("IsDataValidated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(5050));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "ES",
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 149, DateTimeKind.Local).AddTicks(6510),
                            DNI = "00000001",
                            Email = "test1@email.com",
                            IsDataValidated = false,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 149, DateTimeKind.Local).AddTicks(6880),
                            Name = "Customer Test 1",
                            Phone = "5555501",
                            Phone2 = "",
                            SurName = "LastName 1"
                        },
                        new
                        {
                            Id = 2,
                            Country = "ES",
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 149, DateTimeKind.Local).AddTicks(7650),
                            DNI = "20000002",
                            Email = "test2@email.com",
                            IsDataValidated = false,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 149, DateTimeKind.Local).AddTicks(7660),
                            Name = "Customer Test 2",
                            Phone = "",
                            Phone2 = "",
                            SurName = "Customer LastName 2"
                        },
                        new
                        {
                            Id = 3,
                            Country = "ES",
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 149, DateTimeKind.Local).AddTicks(7680),
                            DNI = "00000003",
                            Email = "3test3@email.com",
                            IsDataValidated = false,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 149, DateTimeKind.Local).AddTicks(7680),
                            Name = "Customer 3",
                            Phone = "5555553",
                            Phone2 = "0055553",
                            SurName = "LastName 3"
                        });
                });

            modelBuilder.Entity("CrmApi.Data.Domain.CustomerComment", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(5490));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(5580));

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerComments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "comentario de test Customer 1",
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 150, DateTimeKind.Local).AddTicks(9210),
                            CustomerId = 1,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 150, DateTimeKind.Local).AddTicks(9220)
                        },
                        new
                        {
                            Id = 2,
                            Comment = "test Customer 2 comentario",
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 150, DateTimeKind.Local).AddTicks(9630),
                            CustomerId = 2,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 150, DateTimeKind.Local).AddTicks(9630)
                        },
                        new
                        {
                            Id = 3,
                            Comment = "test otro comentario Customer 1  bla bla ... comentario",
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 150, DateTimeKind.Local).AddTicks(9650),
                            CustomerId = 1,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 150, DateTimeKind.Local).AddTicks(9650)
                        },
                        new
                        {
                            Id = 4,
                            Comment = "mas comentarios del Customer 1  bla bla ... bla bla ....",
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 150, DateTimeKind.Local).AddTicks(9650),
                            CustomerId = 1,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 150, DateTimeKind.Local).AddTicks(9650)
                        });
                });

            modelBuilder.Entity("CrmApi.Data.Domain.InterestedCourse", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(5760));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(5850));

                    b.HasKey("Id", "CourseId", "CustomerId");

                    b.HasAlternateKey("CourseId", "CustomerId", "Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("InterestedCourses");
                });

            modelBuilder.Entity("CrmApi.Data.Domain.OrderTlmkClient", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumOrder")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(6010));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(6170));

                    b.HasKey("Id", "NumOrder", "CustomerId");

                    b.HasAlternateKey("CustomerId", "Id", "NumOrder");

                    b.ToTable("OrderTlmkClients");
                });

            modelBuilder.Entity("CrmApi.Data.Domain.Tickets.Action", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionResultId")
                        .HasColumnType("int");

                    b.Property<int>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("ChangedStateTicketId")
                        .HasColumnType("bit");

                    b.Property<bool>("ChangedUserId")
                        .HasColumnType("bit");

                    b.Property<int>("CouponId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(9690));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(9840));

                    b.Property<string>("Origen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PosponeTicketTime")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ProccesedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Tittle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WebId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("CrmApi.Data.Domain.Tickets.ActionResult", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(9220));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(9340));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NextActionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("NextStateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActionResults");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionTypeId = 3,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(5370),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(5370),
                            Name = "Call NoContesta",
                            NextActionTypeId = 0,
                            NextStateId = 0
                        },
                        new
                        {
                            Id = 2,
                            ActionTypeId = 3,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(6930),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(6930),
                            Name = "Call Venta",
                            NextActionTypeId = 7,
                            NextStateId = 0
                        },
                        new
                        {
                            Id = 3,
                            ActionTypeId = 3,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(6970),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(6970),
                            Name = "Call NoInteresado",
                            NextActionTypeId = 0,
                            NextStateId = 5
                        },
                        new
                        {
                            Id = 4,
                            ActionTypeId = 3,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(6970),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(6970),
                            Name = "Call NumeroNoDisponible",
                            NextActionTypeId = 0,
                            NextStateId = 0
                        });
                });

            modelBuilder.Entity("CrmApi.Data.Domain.Tickets.ActionType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(8490));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(8610));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4030),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4030),
                            Name = "ChangeAssignedUser",
                            ParentId = 11
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4750),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4750),
                            Name = "Pospone ticket",
                            ParentId = 11
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4770),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4780),
                            Name = "ChangeStateTIcket",
                            ParentId = 11
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4780),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4780),
                            Name = "Dossier",
                            ParentId = 12
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4790),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4790),
                            Name = "PreMatrícula",
                            ParentId = 12
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4790),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4790),
                            Name = "Formulario Contacto",
                            ParentId = 12
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4800),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4800),
                            Name = "Venta",
                            ParentId = 13
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4800),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4810),
                            Name = "Call",
                            ParentId = 13
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4810),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4810),
                            Name = "SendMail",
                            ParentId = 13
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4820),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4820),
                            Name = "Receive Mail",
                            ParentId = 12
                        },
                        new
                        {
                            Id = 11,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4820),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4820),
                            Name = "Ticket",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 12,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4830),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4830),
                            Name = "Customer",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 13,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4840),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4840),
                            Name = "Commertial",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 14,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4840),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4840),
                            Name = "Database",
                            ParentId = 0
                        },
                        new
                        {
                            Id = 15,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4850),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4850),
                            Name = "Comment",
                            ParentId = 13
                        },
                        new
                        {
                            Id = 16,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4850),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(4860),
                            Name = "CreateTicket",
                            ParentId = 12
                        });
                });

            modelBuilder.Entity("CrmApi.Data.Domain.Tickets.PriorityId", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weigth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PriorityId");
                });

            modelBuilder.Entity("CrmApi.Data.Domain.Tickets.Task", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(9940));

                    b.Property<DateTime>("DueTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 149, DateTimeKind.Local).AddTicks(20));

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Tittle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("CrmApi.Data.Domain.Tickets.Ticket", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(9430));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId1")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(9520));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int>("RollId")
                        .HasColumnType("int");

                    b.Property<int>("TicketStateId")
                        .HasColumnType("int");

                    b.Property<int>("TicketTypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.HasIndex("CustomerId1");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("CrmApi.Data.Domain.Tickets.TicketState", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(7810));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(7930));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TicketStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(2780),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(2780),
                            Name = "BACKLOG"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(3190),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(3190),
                            Name = "TODO"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(3210),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(3210),
                            Name = "WAITTING"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(3220),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(3220),
                            Name = "IN PROGRESS"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(3220),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(3230),
                            Name = "DONE"
                        });
                });

            modelBuilder.Entity("CrmApi.Data.Domain.Tickets.TicketType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(6980));

                    b.Property<bool>("IsAutomaticAssignation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 148, DateTimeKind.Local).AddTicks(7110));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TicketTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(930),
                            IsAutomaticAssignation = false,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(930),
                            Name = "ContactRequest"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(1890),
                            IsAutomaticAssignation = false,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(1900),
                            Name = "CancellationTrial"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(1930),
                            IsAutomaticAssignation = false,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(1930),
                            Name = "Cancellation"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(1940),
                            IsAutomaticAssignation = false,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(1940),
                            Name = "Return"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(1940),
                            IsAutomaticAssignation = false,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(1940),
                            Name = "ReturnError"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(1950),
                            IsAutomaticAssignation = false,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 151, DateTimeKind.Local).AddTicks(1950),
                            Name = "Custom"
                        });
                });

            modelBuilder.Entity("CrmApi.Data.Domain.Users.User", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActiveDirectoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 149, DateTimeKind.Local).AddTicks(620));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsWorking")
                        .HasColumnType("bit");

                    b.Property<string>("JobTittle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 149, DateTimeKind.Local).AddTicks(760));

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPrincipalName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveDirectoryId = 0,
                            BirthDay = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = 1,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(140),
                            FirstName = "Comercial",
                            IsActive = true,
                            IsDeleted = false,
                            IsWorking = true,
                            JobTittle = "Commertial",
                            LastName = "Uno",
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(500),
                            Phone = "55555001",
                            UserPrincipalName = "Comercial Uno"
                        },
                        new
                        {
                            Id = 2,
                            ActiveDirectoryId = 0,
                            BirthDay = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = 1,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(2650),
                            FirstName = "Sra. Comercial",
                            IsActive = true,
                            IsDeleted = false,
                            IsWorking = true,
                            JobTittle = "Commertial",
                            LastName = "Dos",
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(2660),
                            Phone = "66666002",
                            UserPrincipalName = "Comercial Dos"
                        },
                        new
                        {
                            Id = 3,
                            ActiveDirectoryId = 0,
                            BirthDay = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = 1,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(2710),
                            FirstName = "Dña. Comercial",
                            IsActive = true,
                            IsDeleted = false,
                            IsWorking = true,
                            JobTittle = "Commertial",
                            LastName = "Tres",
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(2710),
                            Phone = "777770033",
                            UserPrincipalName = "Comercial Tres"
                        },
                        new
                        {
                            Id = 4,
                            ActiveDirectoryId = 0,
                            BirthDay = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = 1,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(2720),
                            FirstName = "El Comercial",
                            IsActive = true,
                            IsDeleted = false,
                            IsWorking = true,
                            JobTittle = "Commertial",
                            LastName = "Cuatro",
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(2720),
                            Phone = "888800044",
                            UserPrincipalName = "Comercial Cuatro"
                        });
                });

            modelBuilder.Entity("CrmApi.Data.Domain.Users.UserMail", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 149, DateTimeKind.Local).AddTicks(1390));

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 11, 7, 13, 14, 26, 149, DateTimeKind.Local).AddTicks(1520));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserMails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(4980),
                            IsDefault = false,
                            IsDeleted = false,
                            MailAddress = "comercial1@techtitute.com",
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(4980),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(5160),
                            IsDefault = false,
                            IsDeleted = false,
                            MailAddress = "2comercial2@techtitute.com",
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(5160),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(5170),
                            IsDefault = false,
                            IsDeleted = false,
                            MailAddress = "3comercial3@techtitute.com",
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(5180),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(5180),
                            IsDefault = false,
                            IsDeleted = false,
                            MailAddress = "elcomercialcuatro@techtitute.com",
                            ModificationDate = new DateTime(2019, 11, 7, 13, 14, 26, 152, DateTimeKind.Local).AddTicks(5180),
                            UserId = 4
                        });
                });

            modelBuilder.Entity("CrmApi.Data.Domain.CustomerComment", b =>
                {
                    b.HasOne("CrmApi.Data.Domain.Customer", "Customer")
                        .WithMany("CustomerCommentList")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrmApi.Data.Domain.InterestedCourse", b =>
                {
                    b.HasOne("CrmApi.Data.Domain.Customer", "Customer")
                        .WithMany("InterestedCourseList")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrmApi.Data.Domain.OrderTlmkClient", b =>
                {
                    b.HasOne("CrmApi.Data.Domain.Customer", "Customer")
                        .WithMany("OrderTlmkClientList")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrmApi.Data.Domain.Tickets.Action", b =>
                {
                    b.HasOne("CrmApi.Data.Domain.Tickets.Ticket", "Ticket")
                        .WithMany("ActionsList")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrmApi.Data.Domain.Tickets.Task", b =>
                {
                    b.HasOne("CrmApi.Data.Domain.Tickets.Ticket", "Ticket")
                        .WithMany("TasksList")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrmApi.Data.Domain.Tickets.Ticket", b =>
                {
                    b.HasOne("CrmApi.Data.Domain.Customer", null)
                        .WithOne()
                        .HasForeignKey("CrmApi.Data.Domain.Tickets.Ticket", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrmApi.Data.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId1");
                });
#pragma warning restore 612, 618
        }
    }
}
